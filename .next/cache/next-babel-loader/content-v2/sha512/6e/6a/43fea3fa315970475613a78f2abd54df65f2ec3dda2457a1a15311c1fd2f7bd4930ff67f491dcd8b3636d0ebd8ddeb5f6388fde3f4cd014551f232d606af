{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/blackchalkindia/Learning/Practice/react-complete-guide-code/nextjs-meetup-app/pages/[meetupId]/index.js\";\nimport { MongoClient } from 'mongodb';\nimport { useRouter } from 'next/router';\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\n\nfunction MeetupDetailsPage() {\n  const router = useRouter();\n  const meetupId = router.query.meetupId;\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    title: \"Meetup 1\",\n    image: \"https://upload.wikimedia.org/wikipedia/commons/5/54/Chennai_Montage_New.png\",\n    address: \"1, 10 street, chennai\",\n    descrition: \"meetup 1 on chennai\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const _id = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb://127.0.0.1:27017/meetup');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = meetupCollection.find().toArray();\n  const paths = meetups.map(meetup => {\n    return;\n  });\n  return {\n    fallback: false,\n    paths: [{\n      params: {\n        meetupId: 'm1'\n      }\n    }, {\n      params: {\n        meetupId: 'm2'\n      }\n    }]\n  };\n} // export async function getStaticProps(context){\n//     const meetupId = context.params.meetupId\n//     console.log(meetupId)\n//     return {\n//         props: {\n//             title:'Meetup 1',\n//             image:'https://upload.wikimedia.org/wikipedia/commons/5/54/,Chennai_Montage_New.png',\n//             address:\"1, 10 street, chennai\",\n//             descrition:\"meetup 1 on chennai\",\n//             id: meetupId\n//         }\n//     }\n// }\n\nexport async function getStaticProps(context) {\n  const _id = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb://127.0.0.1:27017/meetup');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetup = meetupCollection.findOne({\n    _id\n  });\n  console.log(meetup);\n}\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["/home/blackchalkindia/Learning/Practice/react-complete-guide-code/nextjs-meetup-app/pages/[meetupId]/index.js"],"names":["MongoClient","useRouter","MeetupDetails","MeetupDetailsPage","router","meetupId","query","getStaticPaths","_id","context","params","client","connect","db","meetupCollection","collection","meetups","find","toArray","paths","map","meetup","fallback","getStaticProps","findOne","console","log"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,iBAAT,GAA6B;AACzB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,QAAQ,GAAGD,MAAM,CAACE,KAAP,CAAaD,QAA9B;AACA,sBACI,QAAC,aAAD;AACI,IAAA,KAAK,EAAC,UADV;AAEI,IAAA,KAAK,EAAC,6EAFV;AAGI,IAAA,OAAO,EAAC,uBAHZ;AAII,IAAA,UAAU,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;AAED,OAAO,eAAeE,cAAf,GAA+B;AAClC,QAAMC,GAAG,GAAGC,OAAO,CAACC,MAAR,CAAeL,QAA3B;AACA,QAAMM,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,kCAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMC,OAAO,GAAGF,gBAAgB,CAACG,IAAjB,GAAwBC,OAAxB,EAAhB;AACA,QAAMC,KAAK,GAAGH,OAAO,CAACI,GAAR,CAAYC,MAAM,IAAI;AAChC;AACH,GAFa,CAAd;AAGA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHH,IAAAA,KAAK,EAAE,CACH;AACIT,MAAAA,MAAM,EAAE;AACJL,QAAAA,QAAQ,EAAE;AADN;AADZ,KADG,EAMH;AACIK,MAAAA,MAAM,EAAE;AACJL,QAAAA,QAAQ,EAAE;AADN;AADZ,KANG;AAFJ,GAAP;AAeH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAekB,cAAf,CAA8Bd,OAA9B,EAAsC;AACzC,QAAMD,GAAG,GAAGC,OAAO,CAACC,MAAR,CAAeL,QAA3B;AACA,QAAMM,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,kCAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMM,MAAM,GAAGP,gBAAgB,CAACU,OAAjB,CAAyB;AAAChB,IAAAA;AAAD,GAAzB,CAAf;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACH;AAED,eAAelB,iBAAf","sourcesContent":["import { MongoClient } from 'mongodb'\nimport { useRouter } from 'next/router'\n\nimport MeetupDetails from '../../components/meetups/MeetupDetails'\n\nfunction MeetupDetailsPage() {\n    const router = useRouter()\n    const meetupId = router.query.meetupId\n    return (\n        <MeetupDetails\n            title='Meetup 1'\n            image='https://upload.wikimedia.org/wikipedia/commons/5/54/Chennai_Montage_New.png'\n            address=\"1, 10 street, chennai\"\n            descrition=\"meetup 1 on chennai\"\n        />\n    )\n}\n\nexport async function getStaticPaths(){\n    const _id = context.params.meetupId\n    const client = await MongoClient.connect('mongodb://127.0.0.1:27017/meetup')\n    const db = client.db()\n    const meetupCollection = db.collection('meetups')\n    const meetups = meetupCollection.find().toArray()\n    const paths = meetups.map(meetup => {\n        return \n    })\n    return {\n        fallback: false,\n        paths: [\n            {\n                params: {\n                    meetupId: 'm1'\n                }\n            },\n            {\n                params: {\n                    meetupId: 'm2'\n                }\n            }\n        ]\n    }\n}\n\n// export async function getStaticProps(context){\n//     const meetupId = context.params.meetupId\n//     console.log(meetupId)\n//     return {\n//         props: {\n//             title:'Meetup 1',\n//             image:'https://upload.wikimedia.org/wikipedia/commons/5/54/,Chennai_Montage_New.png',\n//             address:\"1, 10 street, chennai\",\n//             descrition:\"meetup 1 on chennai\",\n//             id: meetupId\n//         }\n//     }\n// }\n\nexport async function getStaticProps(context){\n    const _id = context.params.meetupId\n    const client = await MongoClient.connect('mongodb://127.0.0.1:27017/meetup')\n    const db = client.db()\n    const meetupCollection = db.collection('meetups')\n    const meetup = meetupCollection.findOne({_id})\n    console.log(meetup)\n}\n\nexport default MeetupDetailsPage"]},"metadata":{},"sourceType":"module"}