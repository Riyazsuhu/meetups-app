{"ast":null,"code":"import mongoose from 'mongoose';\n\nasync function createMeetup(req, res) {\n  if (req.method === 'POST') {\n    mongoose.connect('mongodb://127.0.0.1:27017/meetup', {\n      useNewUrlParser: true,\n      useUnifiedTopology: true\n    });\n    const meetupSchema = new mongoose.Schema({\n      title: String,\n      image: String,\n      address: String,\n      description: String\n    });\n    const meetupModel = mongoose.model('meetup', meet);\n    const meetup = new meetupModel(req.body);\n    const result = await meetup.save();\n    mongoose.connection.close();\n    res.json({\n      message: \"Meetup created successfully\"\n    });\n  }\n}\n\nexport default createMeetup;","map":{"version":3,"sources":["/home/blackchalkindia/Learning/Practice/react-complete-guide-code/nextjs-meetup-app/pages/api/create-meetup.js"],"names":["mongoose","createMeetup","req","res","method","connect","useNewUrlParser","useUnifiedTopology","meetupSchema","Schema","title","String","image","address","description","meetupModel","model","meet","meetup","body","result","save","connection","close","json","message"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;;AAEA,eAAeC,YAAf,CAA4BC,GAA5B,EAAiCC,GAAjC,EAAsC;AAClC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACvBJ,IAAAA,QAAQ,CAACK,OAAT,CAAiB,kCAAjB,EACI;AACIC,MAAAA,eAAe,EAAE,IADrB;AAEIC,MAAAA,kBAAkB,EAAE;AAFxB,KADJ;AAKA,UAAMC,YAAY,GAAG,IAAIR,QAAQ,CAACS,MAAb,CAAoB;AACrCC,MAAAA,KAAK,EAACC,MAD+B;AAErCC,MAAAA,KAAK,EAAED,MAF8B;AAGrCE,MAAAA,OAAO,EAAEF,MAH4B;AAIrCG,MAAAA,WAAW,EAAEH;AAJwB,KAApB,CAArB;AAMA,UAAMI,WAAW,GAAGf,QAAQ,CAACgB,KAAT,CAAe,QAAf,EAAyBC,IAAzB,CAApB;AACA,UAAMC,MAAM,GAAG,IAAIH,WAAJ,CAAgBb,GAAG,CAACiB,IAApB,CAAf;AACA,UAAMC,MAAM,GAAG,MAAMF,MAAM,CAACG,IAAP,EAArB;AACArB,IAAAA,QAAQ,CAACsB,UAAT,CAAoBC,KAApB;AACApB,IAAAA,GAAG,CAACqB,IAAJ,CAAS;AAACC,MAAAA,OAAO,EAAC;AAAT,KAAT;AACH;AACJ;;AAED,eAAexB,YAAf","sourcesContent":["import mongoose from 'mongoose'\n\nasync function createMeetup(req, res) {\n    if (req.method === 'POST') {\n        mongoose.connect('mongodb://127.0.0.1:27017/meetup',\n            {\n                useNewUrlParser: true,\n                useUnifiedTopology: true,\n            })\n        const meetupSchema = new mongoose.Schema({\n            title:String,\n            image: String,\n            address: String,\n            description: String\n        })\n        const meetupModel = mongoose.model('meetup', meet)\n        const meetup = new meetupModel(req.body)\n        const result = await meetup.save() \n        mongoose.connection.close()\n        res.json({message:\"Meetup created successfully\"})\n    }\n}\n\nexport default createMeetup"]},"metadata":{},"sourceType":"module"}