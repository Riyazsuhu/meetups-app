{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/blackchalkindia/Learning/Practice/react-complete-guide-code/nextjs-meetup-app/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport { useRouter } from 'next/router';\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\n\nfunction MeetupDetailsPage() {\n  const router = useRouter();\n  const meetupId = router.query.meetupId;\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    title: \"Meetup 1\",\n    image: \"https://upload.wikimedia.org/wikipedia/commons/5/54/Chennai_Montage_New.png\",\n    address: \"1, 10 street, chennai\",\n    descrition: \"meetup 1 on chennai\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb://127.0.0.1:27017/meetup');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find().toArray();\n  const paths = meetups.map(meetup => ({\n    params: {\n      meetupId: meetup._id.toString()\n    }\n  }));\n  return {\n    fallback: false,\n    paths\n  };\n}\nexport async function getStaticProps(context) {\n  const _id = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb://127.0.0.1:27017/meetup');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  console.log(_id);\n  const meetup = await meetupCollection.findOne({\n    _id: ObjectId(_id)\n  });\n  client.close();\n  return {\n    props: {\n      selectedMeetup: ({} = meetup)\n    }\n  };\n}\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["/home/blackchalkindia/Learning/Practice/react-complete-guide-code/nextjs-meetup-app/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","useRouter","MeetupDetails","MeetupDetailsPage","router","meetupId","query","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","toArray","paths","map","meetup","params","_id","toString","fallback","getStaticProps","context","console","log","findOne","close","props","selectedMeetup"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,iBAAT,GAA6B;AACzB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,QAAQ,GAAGD,MAAM,CAACE,KAAP,CAAaD,QAA9B;AACA,sBACI,QAAC,aAAD;AACI,IAAA,KAAK,EAAC,UADV;AAEI,IAAA,KAAK,EAAC,6EAFV;AAGI,IAAA,OAAO,EAAC,uBAHZ;AAII,IAAA,UAAU,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;AAED,OAAO,eAAeE,cAAf,GAA+B;AAClC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAoB,kCAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,GAAwBC,OAAxB,EAAtB;AACA,QAAMC,KAAK,GAAGH,OAAO,CAACI,GAAR,CAAYC,MAAM,KAAM;AAClCC,IAAAA,MAAM,EAAE;AACJd,MAAAA,QAAQ,EAAEa,MAAM,CAACE,GAAP,CAAWC,QAAX;AADN;AAD0B,GAAN,CAAlB,CAAd;AAKA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHN,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,eAAeO,cAAf,CAA8BC,OAA9B,EAAsC;AACzC,QAAMJ,GAAG,GAAGI,OAAO,CAACL,MAAR,CAAed,QAA3B;AACA,QAAMG,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAoB,kCAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACA,QAAMF,MAAM,GAAG,MAAMP,gBAAgB,CAACgB,OAAjB,CAAyB;AAACP,IAAAA,GAAG,EAAEpB,QAAQ,CAACoB,GAAD;AAAd,GAAzB,CAArB;AACAZ,EAAAA,MAAM,CAACoB,KAAP;AACA,SAAO;AACHC,IAAAA,KAAK,EAAE;AACHC,MAAAA,cAAc,GAAE,KAEZZ,MAFU;AADX;AADJ,GAAP;AAOH;AAED,eAAef,iBAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb'\nimport { useRouter } from 'next/router'\n\nimport MeetupDetails from '../../components/meetups/MeetupDetails'\n\nfunction MeetupDetailsPage() {\n    const router = useRouter()\n    const meetupId = router.query.meetupId\n    return (\n        <MeetupDetails\n            title='Meetup 1'\n            image='https://upload.wikimedia.org/wikipedia/commons/5/54/Chennai_Montage_New.png'\n            address=\"1, 10 street, chennai\"\n            descrition=\"meetup 1 on chennai\"\n        />\n    )\n}\n\nexport async function getStaticPaths(){\n    const client = await MongoClient.connect('mongodb://127.0.0.1:27017/meetup')\n    const db = client.db()\n    const meetupCollection = db.collection('meetups')\n    const meetups = await meetupCollection.find().toArray()\n    const paths = meetups.map(meetup => ( {\n        params: {\n            meetupId: meetup._id.toString()\n        }\n    } ))\n    return {\n        fallback: false,\n        paths\n    }\n}\n\nexport async function getStaticProps(context){\n    const _id = context.params.meetupId\n    const client = await MongoClient.connect('mongodb://127.0.0.1:27017/meetup')\n    const db = client.db()\n    const meetupCollection = db.collection('meetups')\n    console.log(_id)\n    const meetup = await meetupCollection.findOne({_id: ObjectId(_id)})\n    client.close()\n    return {\n        props: {\n            selectedMeetup: {\n                \n            } = meetup\n        }\n    }\n}\n\nexport default MeetupDetailsPage"]},"metadata":{},"sourceType":"module"}