{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/blackchalkindia/Learning/Practice/react-complete-guide-code/nextjs-meetup-app/pages/[meetupId]/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { MongoClient, ObjectId } from 'mongodb';\nimport Head from 'next/head';\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\n\nfunction MeetupDetailsPage(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetails, {\n      title: props.title,\n      image: props.image,\n      address: props.address,\n      description: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb://127.0.0.1:27017/meetup');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find().toArray();\n  const paths = meetups.map(meetup => ({\n    params: {\n      meetupId: meetup._id.toString()\n    }\n  }));\n  return {\n    fallback: false,\n    paths\n  };\n}\nexport async function getStaticProps(context) {\n  const _id = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb://127.0.0.1:27017/meetup');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetup = await meetupCollection.findOne({\n    _id: ObjectId(_id)\n  });\n  delete meetup._id;\n  client.close();\n  return {\n    props: _objectSpread({}, meetup)\n  };\n}\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["/home/blackchalkindia/Learning/Practice/react-complete-guide-code/nextjs-meetup-app/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","Head","MeetupDetails","MeetupDetailsPage","props","title","image","address","description","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","toArray","paths","map","meetup","params","meetupId","_id","toString","fallback","getStaticProps","context","findOne","close"],"mappings":";;;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,sBACI;AAAA,4BACA,QAAC,IAAD;AAAA,6BACI;AAAA,kBAAQA,KAAK,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,QAAC,aAAD;AACI,MAAA,KAAK,EAAED,KAAK,CAACC,KADjB;AAEI,MAAA,KAAK,EAAED,KAAK,CAACE,KAFjB;AAGI,MAAA,OAAO,EAAEF,KAAK,CAACG,OAHnB;AAII,MAAA,WAAW,EAAGH,KAAK,CAACI;AAJxB;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBADJ;AAaH;;AAED,OAAO,eAAeC,cAAf,GAA+B;AAClC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,kCAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,GAAwBC,OAAxB,EAAtB;AACA,QAAMC,KAAK,GAAGH,OAAO,CAACI,GAAR,CAAYC,MAAM,KAAM;AAClCC,IAAAA,MAAM,EAAE;AACJC,MAAAA,QAAQ,EAAEF,MAAM,CAACG,GAAP,CAAWC,QAAX;AADN;AAD0B,GAAN,CAAlB,CAAd;AAKA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHP,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,eAAeQ,cAAf,CAA8BC,OAA9B,EAAsC;AACzC,QAAMJ,GAAG,GAAGI,OAAO,CAACN,MAAR,CAAeC,QAA3B;AACA,QAAMZ,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,kCAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMM,MAAM,GAAG,MAAMP,gBAAgB,CAACe,OAAjB,CAAyB;AAACL,IAAAA,GAAG,EAAEvB,QAAQ,CAACuB,GAAD;AAAd,GAAzB,CAArB;AACA,SAAOH,MAAM,CAACG,GAAd;AACAb,EAAAA,MAAM,CAACmB,KAAP;AACA,SAAO;AACHzB,IAAAA,KAAK,oBACEgB,MADF;AADF,GAAP;AAKH;AAED,eAAejB,iBAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb'\nimport Head from 'next/head'\nimport MeetupDetails from '../../components/meetups/MeetupDetails'\n\nfunction MeetupDetailsPage(props) {\n    return (\n        <>\n        <Head>\n            <title>{props.title}</title>\n        </Head>\n        <MeetupDetails\n            title={props.title}\n            image={props.image}\n            address={props.address}\n            description= {props.description}\n        />\n        </>\n    )\n}\n\nexport async function getStaticPaths(){\n    const client = await MongoClient.connect('mongodb://127.0.0.1:27017/meetup')\n    const db = client.db()\n    const meetupCollection = db.collection('meetups')\n    const meetups = await meetupCollection.find().toArray()\n    const paths = meetups.map(meetup => ( {\n        params: {\n            meetupId: meetup._id.toString()\n        }\n    } ))\n    return {\n        fallback: false,\n        paths\n    }\n}\n\nexport async function getStaticProps(context){\n    const _id = context.params.meetupId\n    const client = await MongoClient.connect('mongodb://127.0.0.1:27017/meetup')\n    const db = client.db()\n    const meetupCollection = db.collection('meetups')\n    const meetup = await meetupCollection.findOne({_id: ObjectId(_id)})\n    delete meetup._id;\n    client.close()\n    return {\n        props: {\n            ...meetup\n        }\n    }\n}\n\nexport default MeetupDetailsPage"]},"metadata":{},"sourceType":"module"}